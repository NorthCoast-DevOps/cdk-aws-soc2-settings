"""
This module defines the VulnerabilityAssetStack, which sets up vulnerability scanning
and asset management resources for SOC 2 compliance. It enables AWS Inspector for
vulnerability scanning, AWS Systems Manager for asset management, and includes a Lambda
function to automatically install the Inspector agent on all newly created EC2 instances.
"""

from aws_cdk import (
    Stack, aws_inspector as inspector, aws_ssm as ssm, aws_lambda as lambda_,
    aws_iam as iam, aws_events as events, aws_events_targets as targets, Duration,
    Tags
)
from constructs import Construct

class VulnerabilityAssetStack(Stack):
    def __init__(self, scope: Construct, construct_id: str, **kwargs) -> None:
        super().__init__(scope, construct_id, **kwargs)

        # Create the CfnResourceGroup with required tags
        resource_group = inspector.CfnResourceGroup(
            self, 
            "InspectorResourceGroup",
            resource_group_tags=[{
                "key": "Name",
                "value": "SOC2VulnerabilityAssetGroup"
            }]
        )

        # Create the CfnAssessmentTarget using the resource group ARN
        assessment_target = inspector.CfnAssessmentTarget(
            self,
            "VulnerabilityAssessmentTarget",
            resource_group_arn=resource_group.attr_arn,
            assessment_target_name="SOC2VulnerabilityAssessmentTarget"
        )

        # Optionally, you can add more tags using the Tags class
        Tags.of(resource_group).add("Environment", "Production")

        # Create an Inspector assessment template
        inspector.CfnAssessmentTemplate(self, "InspectorAssessmentTemplate",
            assessment_target_arn=assessment_target.attr_arn,
            duration_in_seconds=3600,
            assessment_template_name="SOC2VulnerabilityAssessment",
            rules_package_arns=[
                f"arn:aws:inspector:{self.region}:aws:rules-package/0-gEjTy7T7",  # Common Vulnerabilities and Exposures
                f"arn:aws:inspector:{self.region}:aws:rules-package/0-rExsr2X8",  # Network Reachability
                f"arn:aws:inspector:{self.region}:aws:rules-package/0-R01qwB5Q",  # Security Best Practices
                f"arn:aws:inspector:{self.region}:aws:rules-package/0-PmNV0Tcd",  # Runtime Behavior Analysis
            ]
        )

        # Enable AWS Systems Manager for asset management
        ssm.CfnResourceDataSync(self, "SSMResourceDataSync",
            sync_name="SOC2AssetInventory",
            s3_destination=ssm.CfnResourceDataSync.S3DestinationProperty(
                bucket_name=f"{self.account}-ssm-resource-sync",
                sync_format="JsonSerDe",
                bucket_region=self.region
            )
        )

        # Lambda function to install Inspector agent
        inspector_agent_installer = lambda_.Function(self, "InspectorAgentInstaller",
            runtime=lambda_.Runtime.PYTHON_3_8,
            handler="inspector_agent_installer.handler",
            code=lambda_.Code.from_asset("lambda"),
            timeout=Duration.minutes(5),
            environment={
                "REGION": self.region
            }
        )

        # Grant permissions to the Lambda function
        inspector_agent_installer.add_to_role_policy(iam.PolicyStatement(
            actions=["ssm:SendCommand", "ec2:DescribeInstances"],
            resources=["*"]
        ))

        # EventBridge rule to trigger Lambda on EC2 instance creation
        events.Rule(self, "EC2CreationRule",
            event_pattern=events.EventPattern(
                source=["aws.ec2"],
                detail_type=["EC2 Instance State-change Notification"],
                detail={
                    "state": ["pending"]
                }
            ),
            targets=[targets.LambdaFunction(inspector_agent_installer)]
        )
